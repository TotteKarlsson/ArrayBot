// ************************************************************************ //
// WARNING                                                                    
// -------                                                                    
// The types declared in this file were generated from data read from a       
// Type Library. If this type library is explicitly or indirectly (via        
// another type library referring to this type library) re-imported, or the   
// 'Refresh' command of the Type Library Editor activated while editing the   
// Type Library, the contents of this file will be regenerated and all        
// manual modifications will be lost.                                         
// ************************************************************************ //

// $Rev: 52393 $
// File generated on 1/16/2018 10:34:38 AM from Type Library described below.

// ************************************************************************  //
// Type Lib: C:\Program Files (x86)\VideoLAN\VLC\axvlc.dll (1)
// LIBID: {DF2BBE39-40A8-433B-A279-073F48DA94B6}
// LCID: 0
// Helpfile: 
// HelpString: VideoLAN VLC ActiveX Plugin
// DepndLst: 
//   (1) v2.0 stdole, (C:\Windows\SysWOW64\stdole2.tlb)
// SYS_KIND: SYS_WIN32
// ************************************************************************ //
#ifndef   AXVLC_OCXH
#define   AXVLC_OCXH

#pragma option push -b -a4 -w-inl -w-8118

#include <olectrls.hpp>
#include <oleserver.hpp>
#if !defined(__UTILCLS_H)
#include <utilcls.h>
#endif
#if !defined(__UTILCLS_H_VERSION) || (__UTILCLS_H_VERSION < 0x0700)
//
// The code generated by the TLIBIMP utility or the Import|TypeLibrary 
// and Import|ActiveX feature of C++Builder rely on specific versions of
// the header file UTILCLS.H found in the INCLUDE\VCL directory. If an 
// older version of the file is detected, you probably need an update/patch.
//
#error "This file requires a newer version of the header UTILCLS.H" \
       "You need to apply an update/patch to your copy of C++Builder"
#endif
#include <olectl.h>
#include <ocidl.h>
#if !defined(_NO_VCL)
#include <StdVCL.hpp>
#endif  //   _NO_VCL
#include <ocxproxy.h>

#include "AXVLC_TLB.h"
namespace Axvlc_tlb
{

// *********************************************************************//
// HelpString: VideoLAN VLC ActiveX Plugin
// Version:    1.0
// *********************************************************************//


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TVLCPlugin2
// Help String      : VLC control
// Default Interface: IVLCControl2
// Def. Intf. Object: TCOMIVLCControl2
// Def. Intf. DISP? : No
// Event   Interface: DVLCEvents
// TypeFlags        : (34) CanCreate Control
// *********************************************************************//

// *********************************************************************//
// Definition of closures to allow VCL handlers to catch OCX events.      
// *********************************************************************//
typedef void __fastcall (__closure * TVLCPlugin2MediaPlayerBuffering)(System::TObject * Sender, 
                                                                      long cache/*[in]*/);
typedef void __fastcall (__closure * TVLCPlugin2MediaPlayerTimeChanged)(System::TObject * Sender, 
                                                                        long time/*[in]*/);
typedef void __fastcall (__closure * TVLCPlugin2MediaPlayerPositionChanged)(System::TObject * Sender, 
                                                                            float position/*[in]*/);
typedef void __fastcall (__closure * TVLCPlugin2MediaPlayerSeekableChanged)(System::TObject * Sender, 
                                                                            VARIANT_BOOL seekable/*[in]*/);
typedef void __fastcall (__closure * TVLCPlugin2MediaPlayerPausableChanged)(System::TObject * Sender, 
                                                                            VARIANT_BOOL pausable/*[in]*/);
typedef void __fastcall (__closure * TVLCPlugin2MediaPlayerTitleChanged)(System::TObject * Sender, 
                                                                         int title/*[in]*/);
typedef void __fastcall (__closure * TVLCPlugin2MediaPlayerLengthChanged)(System::TObject * Sender, 
                                                                          long length/*[in]*/);
//+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-
// Proxy class to host VLC control in CBuilder IDE/Applications.
//-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
class PACKAGE TVLCPlugin2 : public Vcl::Olectrls::TOleControl
{
  OVERLOADED_PROP_METHODS;
  static TNoParam  OptParam;
  static GUID      DEF_CTL_INTF;

  // Instance of Closures to expose OCX Events as VCL ones
  //
  System::Classes::TNotifyEvent  FOnMediaPlayerNothingSpecial;
  System::Classes::TNotifyEvent  FOnMediaPlayerOpening;
  TVLCPlugin2MediaPlayerBuffering FOnMediaPlayerBuffering;
  System::Classes::TNotifyEvent  FOnMediaPlayerPlaying;
  System::Classes::TNotifyEvent  FOnMediaPlayerPaused;
  System::Classes::TNotifyEvent  FOnMediaPlayerForward;
  System::Classes::TNotifyEvent  FOnMediaPlayerBackward;
  System::Classes::TNotifyEvent  FOnMediaPlayerEncounteredError;
  System::Classes::TNotifyEvent  FOnMediaPlayerEndReached;
  System::Classes::TNotifyEvent  FOnMediaPlayerStopped;
  TVLCPlugin2MediaPlayerTimeChanged FOnMediaPlayerTimeChanged;
  TVLCPlugin2MediaPlayerPositionChanged FOnMediaPlayerPositionChanged;
  TVLCPlugin2MediaPlayerSeekableChanged FOnMediaPlayerSeekableChanged;
  TVLCPlugin2MediaPlayerPausableChanged FOnMediaPlayerPausableChanged;
  System::Classes::TNotifyEvent  FOnMediaPlayerMediaChanged;
  TVLCPlugin2MediaPlayerTitleChanged FOnMediaPlayerTitleChanged;
  TVLCPlugin2MediaPlayerLengthChanged FOnMediaPlayerLengthChanged;

  // Default Interace of OCX
  //
  TCOMIVLCControl2 m_OCXIntf;

  // VCL Property Getters/Setters which delegate to OCX
  //
  Axvlc_tlb::IVLCAudioPtr __fastcall get_audio(void);
  Axvlc_tlb::IVLCInputPtr __fastcall get_input(void);
  Axvlc_tlb::IVLCPlaylistPtr __fastcall get_playlist(void);
  Axvlc_tlb::IVLCSubtitlePtr __fastcall get_subtitle(void);
  Axvlc_tlb::IVLCVideoPtr __fastcall get_video(void);
  Axvlc_tlb::IVLCMediaDescriptionPtr __fastcall get_mediaDescription(void);

  // Static variables used by all instances of OCX proxy
  //
  static int          EventDispIDs[17];
  static Vcl::Olectrls::TControlData2 CControlData;
  static GUID          CTL_DEF_INTF;

  // Method providing access to interface as __property 
  //
  TCOMIVLCControl2 __fastcall GetDefaultInterface();
  TCOMIVLCControl2 __fastcall GetControlInterface()
  { return GetDefaultInterface(); }

protected:
  void     __fastcall CreateControl  ();
  void     __fastcall InitControlData();

public:
  virtual  __fastcall TVLCPlugin2(System::Classes::TComponent* AOwner) : Vcl::Olectrls::TOleControl(AOwner)
  {};
  virtual  __fastcall TVLCPlugin2(HWND        Parent) : Vcl::Olectrls::TOleControl(Parent)
  {};

  // OCX methods
  //
  BSTR            __fastcall getVersionInfo(void);

  // OCX properties
  //
  __property System::WideString VersionInfo={ read=GetWideStringProp, index=-1/*id=1610743818*/ };
  __property Axvlc_tlb::IVLCAudioPtr audio={ read=get_audio };
  __property Axvlc_tlb::IVLCInputPtr input={ read=get_input };
  __property Axvlc_tlb::IVLCPlaylistPtr playlist={ read=get_playlist };
  __property Axvlc_tlb::IVLCSubtitlePtr subtitle={ read=get_subtitle };
  __property Axvlc_tlb::IVLCVideoPtr video={ read=get_video };
  __property Axvlc_tlb::IVLCMediaDescriptionPtr mediaDescription={ read=get_mediaDescription };
  __property TCOMIVLCControl2 ControlInterface={ read=GetDefaultInterface };

  // Published properties
  //
__published:

  // Standard/Extended properties
  //
  __property TabStop;
  __property Align;
  __property DragCursor;
  __property DragMode;
  __property ParentShowHint;
  __property PopupMenu;
  __property ShowHint;
  __property TabOrder;
  __property OnDragDrop;
  __property OnDragOver;
  __property OnEndDrag;
  __property OnEnter;
  __property OnExit;
  __property OnStartDrag;

  // OCX properties
  //
  __property bool AutoLoop={ read=GetWordBoolProp, write=SetWordBoolProp, stored=false, index=-1/*id=1610743808*/ };
  __property bool AutoPlay={ read=GetWordBoolProp, write=SetWordBoolProp, stored=false, index=-1/*id=1610743810*/ };
  __property System::WideString BaseURL={ read=GetWideStringProp, write=SetWideStringProp, stored=false, index=-1/*id=1610743812*/ };
  __property int StartTime={ read=GetIntegerProp, write=SetIntegerProp, stored=false, index=-1/*id=1610743814*/ };
  __property System::WideString MRL={ read=GetWideStringProp, write=SetWideStringProp, stored=false, index=-1/*id=1610743816*/ };
  __property bool Visible={ read=GetWordBoolProp, write=SetWordBoolProp, stored=false, index=-1/*id=1610743820*/ };
  __property int volume={ read=GetIntegerProp, write=SetIntegerProp, stored=false, index=-1/*id=1610743822*/ };
  __property int BackColor={ read=GetIntegerProp, write=SetIntegerProp, stored=false, index=-1/*id=1610743824*/ };
  __property bool Toolbar={ read=GetWordBoolProp, write=SetWordBoolProp, stored=false, index=-1/*id=1610743826*/ };
  __property bool FullscreenEnabled={ read=GetWordBoolProp, write=SetWordBoolProp, stored=false, index=-1/*id=1610743833*/ };
  __property bool Branding={ read=GetWordBoolProp, write=SetWordBoolProp, stored=false, index=-1/*id=1610743836*/ };

  // OCX Events
  //
  __property System::Classes::TNotifyEvent OnMediaPlayerNothingSpecial={ read=FOnMediaPlayerNothingSpecial, write=FOnMediaPlayerNothingSpecial };
  __property System::Classes::TNotifyEvent OnMediaPlayerOpening={ read=FOnMediaPlayerOpening, write=FOnMediaPlayerOpening };
  __property TVLCPlugin2MediaPlayerBuffering OnMediaPlayerBuffering={ read=FOnMediaPlayerBuffering, write=FOnMediaPlayerBuffering };
  __property System::Classes::TNotifyEvent OnMediaPlayerPlaying={ read=FOnMediaPlayerPlaying, write=FOnMediaPlayerPlaying };
  __property System::Classes::TNotifyEvent OnMediaPlayerPaused={ read=FOnMediaPlayerPaused, write=FOnMediaPlayerPaused };
  __property System::Classes::TNotifyEvent OnMediaPlayerForward={ read=FOnMediaPlayerForward, write=FOnMediaPlayerForward };
  __property System::Classes::TNotifyEvent OnMediaPlayerBackward={ read=FOnMediaPlayerBackward, write=FOnMediaPlayerBackward };
  __property System::Classes::TNotifyEvent OnMediaPlayerEncounteredError={ read=FOnMediaPlayerEncounteredError, write=FOnMediaPlayerEncounteredError };
  __property System::Classes::TNotifyEvent OnMediaPlayerEndReached={ read=FOnMediaPlayerEndReached, write=FOnMediaPlayerEndReached };
  __property System::Classes::TNotifyEvent OnMediaPlayerStopped={ read=FOnMediaPlayerStopped, write=FOnMediaPlayerStopped };
  __property TVLCPlugin2MediaPlayerTimeChanged OnMediaPlayerTimeChanged={ read=FOnMediaPlayerTimeChanged, write=FOnMediaPlayerTimeChanged };
  __property TVLCPlugin2MediaPlayerPositionChanged OnMediaPlayerPositionChanged={ read=FOnMediaPlayerPositionChanged, write=FOnMediaPlayerPositionChanged };
  __property TVLCPlugin2MediaPlayerSeekableChanged OnMediaPlayerSeekableChanged={ read=FOnMediaPlayerSeekableChanged, write=FOnMediaPlayerSeekableChanged };
  __property TVLCPlugin2MediaPlayerPausableChanged OnMediaPlayerPausableChanged={ read=FOnMediaPlayerPausableChanged, write=FOnMediaPlayerPausableChanged };
  __property System::Classes::TNotifyEvent OnMediaPlayerMediaChanged={ read=FOnMediaPlayerMediaChanged, write=FOnMediaPlayerMediaChanged };
  __property TVLCPlugin2MediaPlayerTitleChanged OnMediaPlayerTitleChanged={ read=FOnMediaPlayerTitleChanged, write=FOnMediaPlayerTitleChanged };
  __property TVLCPlugin2MediaPlayerLengthChanged OnMediaPlayerLengthChanged={ read=FOnMediaPlayerLengthChanged, write=FOnMediaPlayerLengthChanged };
};
typedef TVLCPlugin2  TVLCPlugin2Proxy;

};     // namespace Axvlc_tlb

#if !defined(NO_IMPLICIT_NAMESPACE_USE)
using  namespace Axvlc_tlb;
#endif

#pragma option pop

#endif // AXVLC_OCXH
